generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  REGULATOR
  DOCTOR
  PHARMACIST
  MANUFACTURER
  DISTRIBUTOR
  PATIENT
}

model User {
  id              Int       @id @default(autoincrement())
  address         String    @unique
  role            Role      @default(PATIENT)
  twoFactorSecret String?   
  metadata        Json?
  accessRevoked   Boolean   @default(false)
  complianceFlag  String?   
  prescriptionsAsDoctor Prescription[] @relation("DoctorPrescriptions")
  prescriptionsAsPatient Prescription[] @relation("PatientPrescriptions")
  batches         Batch[]   
  transfersFrom   Transfer[] @relation("TransferFrom")
  transfersTo     Transfer[] @relation("TransferTo")
  auditLogs       AuditLog[]
}

model Prescription {
  id                Int      @id @default(autoincrement())
  doctorId          Int
  patientId         Int
  data              Json
  blockchainTxHash  String   @unique
  revoked           Boolean  @default(false)

  doctor   User @relation("DoctorPrescriptions", fields: [doctorId], references: [id])
  patient  User @relation("PatientPrescriptions", fields: [patientId], references: [id])
}

model Batch {
  id                Int      @id @default(autoincrement())
  manufacturerId    Int
  batchNumber       String
  data              Json
  blockchainTxHash  String   @unique
  complianceFlag    String?

  manufacturer User @relation(fields: [manufacturerId], references: [id])
  transfers    Transfer[]
}

model Transfer {
  id               Int      @id @default(autoincrement())
  batchId          Int
  fromUserId       Int
  toUserId         Int
  status           String   // "INITIATED", "COMPLETED"
  blockchainTxHash String   @unique

  batch      Batch @relation(fields: [batchId], references: [id])
  fromUser   User  @relation("TransferFrom", fields: [fromUserId], references: [id])
  toUser     User  @relation("TransferTo", fields: [toUserId], references: [id])
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  userId      Int
  actionType  String
  targetId    Int?
  description String?
  timestamp   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
